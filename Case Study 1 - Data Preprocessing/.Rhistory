bankdata = read.csv("bankdata.csv")
bankdata.summary()
summary(bankdata)
range(bankdata$age)
bankdata <- read.csv("bankdata.csv")
library(dplyr)
PEPmarriedcar <- group_by(pep, married, car)
PEPmarriedcar <- group_by(bankdata, c(pep, married, car))
?group_by
PEPmarriedcar <- group_by(bankdata, pep, married, car)
library(dplyr)
PEPmarriedcar <- group_by(bankdata, pep, married, car)
PEPmarriedcarsummary <- summarise(PEPmarriedcar,
MeanAge = mean(age),
MeanIncome = mean(income),
MeanKids = mean(children))
View(PEPmarriedcarsummary)
View(PEPmarriedcar)
PEP <- group_by(bankdata, pep)
PEPsummary <- summarise(PEP, MeanAge = mean(age), MeanIncome = mean(income), MeanKids = mean(children))
View(PEPsummary)
library(ggplot2)
incomehistogram <- ggplot(data = bankdata, aes(bankdata$age)) +
geom_histogram()
incomehistogram
incomehistogram <- ggplot(data = bankdata, aes(bankdata$income)) +
geom_histogram()
incomehistogram
incomehistogram <- ggplot(data = bankdata, aes(bankdata$income)) +
geom_histogram(fill='green')
incomehistogram
incomehistogram <- ggplot(data = bankdata, aes(bankdata$income)) +
geom_histogram(fill='darkgreen')
incomehistogram
incomehistogram <- ggplot(data = bankdata, aes(bankdata$income)) +
geom_histogram(fill='darkgreen') +
xlab('Income')
incomehistogram
incomehistogram <- ggplot(data = bankdata, aes(bankdata$income)) +
geom_histogram(fill='g') +
xlab('Income')
incomehistogram
incomehistogram <- ggplot(data = bankdata, aes(x=bankdata$income)) +
geom_bar(fill='green') +
xlab('Income')
incomehistogram
incomehistogram <- ggplot(data = bankdata, aes(x=bankdata$income)) +
geom_bar(fill='green', stat='identity') +
xlab('Income')
incomehistogram
incomehistogram <- ggplot(data = bankdata, aes(x=bankdata$income)) +
geom_bar(fill='green', stat='bin') +
xlab('Income')
incomehistogram
incomehistogram <- ggplot(data = bankdata, aes(x=bankdata$income)) +
geom_bar(fill='turquoise', stat='bin') +
xlab('Income')
incomehistogram
incomehistogram <- ggplot(data = bankdata, aes(x=bankdata$income)) +
geom_bar(stat='bin') +
xlab('Income')
incomehistogram
incomehistogram <- ggplot(data = bankdata, aes(x=bankdata$income)) +
geom_bar(stat='bin') +
xlab('Income') + ylab('Count')
incomehistogram
incomehistogram <- ggplot(data = bankdata, aes(x=bankdata$income)) +
geom_bar(stat='bin') +
xlab('Income') + ylab('Count') + title('Histogram for Income')
incomehistogram
incomehistogram <- ggplot(data = bankdata, aes(x=bankdata$income)) +
geom_bar(stat='bin') +
xlab('Income') + ylab('Count') + ggtitle('Histogram for Income')
incomehistogram
incomehistogram <- ggplot(data = bankdata, aes(x=bankdata$income)) +
geom_bar(stat='bin', fill='muted') +
xlab('Income') + ylab('Count') + ggtitle('Histogram for Income')
incomehistogram
incomehistogram <- ggplot(data = bankdata, aes(x=bankdata$income)) +
geom_bar(stat='bin', fill='springgreen') +
xlab('Income') + ylab('Count') + ggtitle('Histogram for Income')
incomehistogram
incomehistogram <- ggplot(data = bankdata, aes(x=bankdata$income)) +
geom_bar(stat='bin', fill='limegreen') +
xlab('Income') + ylab('Count') + ggtitle('Histogram for Income')
incomehistogram
ggplot(data = gapminder2007, mapping = aes(x = gdpPercap, y = lifeExp)) +
geom_point(mapping = aes(color = continent, size = pop)) +
geom_smooth(se = FALSE) +
labs(size = "Population", color = "Continent") +
xlab("GDP per Capita (USD)") +
ylab("Life Expectancy") +
theme(legend.position = "bottom") +
ggtitle("World Life Expectancy vs. GDP per Capita in 2007")
gapminder2007 <- filter(gapminder, year == 2007)
ggplot(data = gapminder2007, mapping = aes(x = gdpPercap, y = lifeExp)) +
geom_point(mapping = aes(color = continent, size = pop)) +
geom_smooth(se = FALSE) +
labs(size = "Population", color = "Continent") +
xlab("GDP per Capita (USD)") +
ylab("Life Expectancy") +
theme(legend.position = "bottom") +
ggtitle("World Life Expectancy vs. GDP per Capita in 2007")
library(gapminder)
library(dplyr)
library(ggplot2)
gapminder2007 <- filter(gapminder, year == 2007)
ggplot(data = gapminder2007, mapping = aes(x = gdpPercap, y = lifeExp)) +
geom_point(mapping = aes(color = continent, size = pop)) +
geom_smooth(se = FALSE) +
labs(size = "Population", color = "Continent") +
xlab("GDP per Capita (USD)") +
ylab("Life Expectancy") +
theme(legend.position = "bottom") +
ggtitle("World Life Expectancy vs. GDP per Capita in 2007")
SEA <- droplevels(gapminder[gapminder$country %in% c("Philippines", "Singapore", "Indonesia", "Malaysia", "Thailand", "Vietnam"), ])
ggplot(data = SEA, mapping = aes(x = year, y = gdpPercap, color = country)) +
geom_point(mapping = aes(size = pop)) +
geom_smooth(mapping = aes(color = country)) +
labs(size = "Population", color = "Country", x = "Year", y = "GDP per Capita (USD)", title = "GDP per Capita vs. Year for SEA") +
theme(legend.position = "bottom")
incomehistogram <- ggplot(data = bankdata, aes(x=bankdata$income)) +
geom_bar(stat='bin', fill='limegreen', color='black') +
xlab('Income') + ylab('Count') + ggtitle('Histogram for Income')
incomehistogram
hist(bankdata$income)
incomehistogram <- ggplot(data = bankdata, aes(x=bankdata$income)) +
geom_bar(stat='bin', fill='limegreen', color='black') +
xlab('Income') + ylab('Frequency') + ggtitle('Histogram of Income')
incomehistogram
hist(bankdata$income, ylab = 'Frequency', col = 'limegreen', main = 'Histogram of Income')
library(ggplot2)
incomehistogram <- ggplot(data = bankdata, aes(x=bankdata$income)) +
geom_bar(stat='bin', fill='limegreen', color='black') +
xlab('Income') + ylab('Frequency') + ggtitle('Histogram of Income')
incomehistogram
hist(bankdata$income, ylab = 'Frequency', xlab = 'Income', col = 'limegreen', main = 'Histogram of Income')
?hist
hist()
?ggplot
?ggplot
incomeboxplot <- ggplot(data = bankdata, aes(x=bankdata$pep)) +
geom_boxplot()
incomeboxplot
incomeboxplot <- ggplot(data = bankdata, aes(x=bankdata$pep, y=bankdata$income)) +
geom_boxplot()
incomeboxplot
incomeboxplot <- ggplot(data = bankdata, aes(x=bankdata$pep, y=bankdata$income)) +
geom_boxplot() +
xlab('PEP Purchase') + ylab('Income') +
ggtitle('Boxplot of Income vs. PEP')
incomeboxplot
incomeboxplot <- ggplot(data = bankdata, aes(x=bankdata$pep, y=bankdata$income)) +
geom_boxplot(aes(fill=bankdata$pep)) +
xlab('PEP Purchase') + ylab('Income') +
ggtitle('Boxplot of Income vs. PEP')
incomeboxplot
incomeboxplot <- ggplot(data = bankdata, aes(x=bankdata$pep, y=bankdata$income)) +
geom_boxplot(aes(fill=bankdata$pep), name="PEP Purchaser") +
xlab('PEP Purchase') + ylab('Income') +
ggtitle('Boxplot of Income vs. PEP')
incomeboxplot <- ggplot(data = bankdata, aes(x=bankdata$pep, y=bankdata$income)) +
geom_boxplot(aes(fill=bankdata$pep)) +
scale_shape_discrete(name = 'PEP Purchaser') +
xlab('PEP Purchaser') + ylab('Income') +
ggtitle('Boxplot of Income vs. PEP')
incomeboxplot
incomeboxplot <- ggplot(data = bankdata, aes(x=bankdata$pep, y=bankdata$income)) +
geom_boxplot(aes(fill=bankdata$pep)) +
theme(legend.title = 'PEP Purchaser') +
xlab('PEP Purchaser') + ylab('Income') +
ggtitle('Boxplot of Income vs. PEP')
incomeboxplot
incomeboxplot <- ggplot(data = bankdata, aes(x=bankdata$pep, y=bankdata$income)) +
geom_boxplot(aes(fill=bankdata$pep)) +
theme(legend.name = 'PEP Purchaser') +
xlab('PEP Purchaser') + ylab('Income') +
ggtitle('Boxplot of Income vs. PEP')
incomeboxplot
incomeboxplot <- ggplot(data = bankdata, aes(x=bankdata$pep, y=bankdata$income)) +
geom_boxplot(aes(fill=bankdata$pep)) +
theme(legend.title=element_blank()) +
xlab('PEP Purchaser') + ylab('Income') +
ggtitle('Boxplot of Income vs. PEP')
incomeboxplot
incomebyregion <- ggplot(data = bankdata, aes(x=bankdata$pep, y=bankdata$region)) +
geom_boxplot(aes(fill=bankdata$pep)) +
theme(legend.title=element_blank()) +
xlab('Region') + ylab('Income') +
ggtitle('Boxplot of Income vs. Region')
incomeboxplot
incomebyregion
incomebyregion <- ggplot(data = bankdata, aes(x=bankdata$region, y=bankdata$income)) +
geom_boxplot(aes(fill=bankdata$pep)) +
theme(legend.title=element_blank()) +
xlab('Region') + ylab('Income') +
ggtitle('Boxplot of Income vs. Region')
incomebyregion
incomebyregion <- ggplot(data = bankdata, aes(x=bankdata$region, y=bankdata$income)) +
geom_boxplot(aes(fill=bankdata$region)) +
theme(legend.title=element_blank()) +
xlab('Region') + ylab('Income') +
ggtitle('Boxplot of Income vs. Region')
incomebyregion
incomeagechildren <- ggplot(data=bankdata, aes(x=age,y=income)) +
geom_point(aes(color=children)) +
xlab('Age') + ylab('Income') + labs(color='Income') +
ggtitle('Income vs. Age and Number of Children')
incomeagechildren
incomeagechildren <- ggplot(data=bankdata, aes(x=age,y=income)) +
geom_point(aes(color=children)) +
xlab('Age') + ylab('Income') + labs(color='children') +
ggtitle('Income vs. Age and Number of Children')
incomeagechildren
incomeagechildren <- ggplot(data=bankdata, aes(x=age,y=income)) +
geom_point(aes(color=factor(children))) +
xlab('Age') + ylab('Income') + labs(color='children') +
ggtitle('Income vs. Age and Number of Children')
incomeagechildren
incomeagechildren <- ggplot(data=bankdata, aes(x=age,y=income)) +
geom_point(aes(color=factor(children))) +
xlab('Age') + ylab('Income') + labs(color='Children') +
ggtitle('Income vs. Age and Number of Children')
incomeagechildren
install.packages("ggpairs")
install.packages("GGally")
library(GGally)
ggpairs(bankdata)
ggpairs(bankdata, columns=c('age','income','children'))
install.packages('tibble')
install.packages("tibble")
install.packages("tibble")
install.packages("tibble")
install.packages("tibble")
install.packages("tibble")
install.packages("tibble")
ggpairs(bankdata, columns=c('age','income','children'))
library(GGally)
ggpairs(bankdata, columns=c('age','income','children'))
library(ggplot2)
if(!require(installr)) {
install.packages("installr"); require(installr)}
updateR()
import(ggally)
install.packages("pastecs")
install.packages("reshape2")
install.packages("rJava")
install.packages("RWeka")
install.packages("ROCR")
install.packages("partykit")
install.packages("e1071")
install.packages("car")
install.packages("glmnet")
install.packages("arules")
install.packages("arulesViz")
install.packages("arulesSequences")
install.packages("wordcloud")
install.packages("tm")
install.packages("twitteR")
install.packages("plyr")
install.packages ("stringr")
install.packages ("shiny")
install.packages("xlsx")
install.packages("data.table")
install.packages("MASS")
install.packages("ggplot2")
install.packages("RODBC")
install.packages("treemap")
install.packages("dplyr")
install.packages("installr")
install.packages("sqldf")
install.packages("XLConnect")
install.packages("GGally")
>ggpairs
?ggpairs
library(GGally)
?ggpairs
incomeagechildren <- ggpairs(data=bankdata, columns=c('age','income','children'))
incomeagechildren
library(ggplot2)
?plotmatrix
??plotmatrix
incomeagechildren <- ggscatmat(data=bankdata, columns=c('age','income','children'))
incomeagechildren
incomeagechildren <- ggnostic(data=bankdata, columns=c('age','income','children'))
incomeagechildren
incomeagechildren <- ggnostic(data=bankdata, columns=c('age','income','children'))
pairs(bankdata$income, bankdata$age, bankdata$children)
pairs(bankdata$income)
pairs(bankdata)
View(incomeagechildren)
pairs(incomeagechildren)
incomeagechildren <- bankdata[,c('income','age','children')]
pairs(incomeagechildren)
callcenter2013 <- read.csv('2013.csv')
callcenter2014 <- read.csv('2014.csv')
callcenter2015 <- read.csv('2015.csv')
View(callcenter2013)
View(callcenter2014)
View(callcenter2015)
library(dplyr)
complete <- merge(callcenter2013, callcenter2014, callcenter2015)
complete <- merge(callcenter2013, callcenter2014, by=c('YEAR'), all = TRUE)
complete <- merge(x = callcenter2013, y = callcenter2014, by=c('YEAR'), all = TRUE)
?rbind
complete <- rbind(callcenter2013, callcenter2014, callcenter2015)
View(callcenter2015)
permonthyear <- group_by(complete, MONTH, YEAR)
permonthyear
View(permonthyear)
callspermonthyear <- summarise(permonthyear,
count=n())
View(callspermonthyear)
callspermonthyear <- summarise(permonthyear,
Number of Calls=n())
callspermonthyear <- summarise(permonthyear,
"Number of Calls"=n())
callspermonthyear
permonth <- group_by(complete, MONTH)
callspermonth <- summarise(permonth,
MeanCalls = mean(n()))
callspermonth
View(permonth)
callspermonth <- summarise(permonth,
NumberofCalls = n())
callspermonth
callspermonth <- summarise(permonth,
MeanCalls = n()/3)
callspermonth
invalid <- filter(complete, TRANSTYPE == "INVALID")
n(invalid)
invalid.n()
n(invalid)
?n
View(complete)
invalidpertype <- group_by(invalid, TYPE)
invalidpertype
invalidpertype <- group_by(invalid, TRANS)
invalidpertype
invalidpertypesummary <- summarise(invalidpertype,
Count=n())
invalidpertypesummary
View(invalidpertypesummary)
View(PEP)
View(callspermonth)
persub <- group_by(complete, SUBID)
callspersub.mean()
mean(persub)
persubsummary <- summarise(persub,
Count=n())
View(persubsummary)
mean(persubsummary$Count)
permonth <- group_by(complete, MONTH)
callspermonth <- summarise(permonth,
MeanCalls = n()/n(permonthyear$YEAR))
permonth <- group_by(complete, MONTH)
callspermonth <- summarise(permonth,
MeanCalls = n()/3)
callspermonth
pertransaction <- complete %>%
group_by(TRANSTYPE) %>%
summarise(TransactionCount = n()) %>%
arrange(desc(TransactionCount))
pertransaction
pertransaction <- complete %>%
group_by(TRANS) %>%
summarise(TransactionCount = n()) %>%
arrange(desc(TransactionCount))
pertransaction
View(pertransaction)
repeatcall <- persub %>%
filter(transaction) %>%
repeatcall <- persub %>%
filter(transaction)
repeatcall <- persub %>%
filter(TRANS)
repeatcall <- persub %>%
groupby(TRANS) %>%
summarise(RepeatCalls = n()-1)
repeatcall <- persub %>%
group_by(TRANS) %>%
summarise(RepeatCalls = n()-1)
repeatcall
View(repeatcall)
repeatcall <- complete %>%
group_by(SUBID, TRANS) %>%
summarise(RepeatCalls = n()-1)
repeatcall
View(repeatcall)
sum(repeatcall$RepeatCalls)/count(repeatcall$SUBID)
sum(repeatcall$RepeatCalls)/count(repeatcall$TRANS)
sum(repeatcall$RepeatCalls)/nlevels(repeatcall$TRANS)
repeatcall <- complete %>%
group_by(SUBID, TRANS) %>%
summarise(RepeatCalls = n()-1) %>%
group_by(SUBID) %>%
summarise(AverageRepeatCalls = sum(RepeatCalls)/nlevels(TRANS))
repeatcall
View(repeatcall)
repeatcall <- complete %>%
group_by(SUBID, TRANS) %>%
summarise(RepeatCalls = n()-1) %>%
group_by(SUBID) %>%
summarise(SubRepeatCalls = sum(RepeatCalls))
repeatcall
mean(repeatcall$SubRepeatCalls)
repeatcall <- complete %>%
group_by(SUBID, TRANS) %>%
summarise(RepeatCalls = n()-1) %>%
group_by(SUBID) # %>%
repeatcall
summarise(SubRepeatCalls = sum(RepeatCalls))
repeatcall <- complete %>%
group_by(SUBID, TRANS) %>%
summarise(RepeatCalls = n()-1) %>%
group_by(SUBID) %>%
summarise(SubRepeatCalls = sum(RepeatCalls))
repeatcall
ggscatmat(data=bankdata, columns=c('age','income','children'))
ggscatmat(data=bankdata, columns=c('income','age','children'))
var(bankdata)
sd(bankdata)
var(bankdata, c("age, sex, income, children"))
sd(bankdata)
bankdata <- read.csv("bankdata.csv")
sd(bankdata)
?sd
sd(bankdata, na.rm=TRUE)
sd(bankdata$age, bankdata$income, bankdata$income)
sd(c("bankdata$age", "bankdata$income", "bankdata$income"))
sd(c("bankdata$age", "bankdata$income", "bankdata$income"), na.rm=TRUE)
sd(bankdata$age)
sd(as.double(bankdata))
bankints <- c(bankdata$age, bankdata$income, bankdata$children)
sd(bankints)
bankints <- df(bankdata$age, bankdata$income, bankdata$children)
sd(bankints)
bankints <- data.frame(bankdata$age, bankdata$income, bankdata$children)
sd(bankints)
lapply(bankints, sd)
lapply(bankdata, sd)
lapply(bankdata, sd)
lapply(bankints, sd)
lapply(bankints, var)
lapply(bankints, sum)
lapply(bankints, range)
summary(bankdata)
